openapi: 3.0.2
info:
    title: TARpe21_Games
    version: 1.0.0
    description: |-
        ### This is a Swagger UI for our Games API  

        ### Error handlingErrors are presented using the HTTP status codes 400-599.

        The response include a more detailed explanation about the error in the body.

        ```{  "error": "Cleartext explanation of the error that occurred"}```
        ### Generic API errors

        These error responses can be returned by any of the described endpoints.
        | HTTP status  |  Description |
        |---|---|
        | 400| Bad input parameters or invalid request. More information can be found in the response body.
        | 401| The consumer does not have access to the requested resource or the provided token is not valid.
        | 404| The requested resource can not be found or the user does not have access to the resource.
        | 5XX| A server error has occurred while processing the request.
paths:
    /games:
        get:
            tags:
                - games
            responses:
                '200':
                    content:
                        application/json:
                            examples:
                                Empty Array:
                                    value: []
                                List Of Games:
                                    value:
                                        -
                                            id: 1
                                            name: Game name
                                        -
                                            id: 5
                                            name: Another game
                    description: 'Successful '
            summary: Get all games
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/game'
                        examples:
                            NewGame:
                                value:
                                    name: some text
                                    price: 76.33
                required: true
            tags:
                - games
            responses:
                '201':
                    headers:
                        location: {}
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/game'
                            examples:
                                CreatedGame:
                                    value:
                                        id: 3
                                        name: some text
                                        price: 83.18
                    description: Success
    '/games/{id}':
        summary: Handle single game by its id
        get:
            tags:
                - games
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/game'
                            examples:
                                Single Game:
                                    value:
                                        id: 33
                                        name: Game name
                                        price: 50.89
                    description: Successful
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Game not found
                    description: Game was not found
            summary: Get by Id
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/game'
                        examples:
                            Updated game:
                                value:
                                    id: 40
                                    name: New name
                                    price: 32.71
                required: true
            tags:
                - games
            responses:
                '204':
                    headers:
                        location:
                            schema:
                                type: string
                    description: Success
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found:
                                    value:
                                        error: game not found
                    description: Not found
        delete:
            tags:
                - games
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                NotFound:
                                    value:
                                        error: Game not found
                    description: Game not found
        parameters:
            -
                examples:
                    Small:
                        value: '6'
                name: id
                description: |
                    Identificator for the game
                schema:
                    type: integer
                in: path
                required: true
    /players:
        summary: Path used to manage the list of players.
        description: >-
            The REST endpoint/path used to list and create zero or more `Player` entities.  This path contains
            a `GET` and `POST` operation to perform the list and create tasks, respectively.
        get:
            tags:
                - players
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Player'
                    description: Successful response - returns an array of `Player` entities.
            operationId: getPlayers
            summary: List All Players
            description: Gets a list of all `Player` entities.
        post:
            requestBody:
                description: A new `Player` to be created.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Player'
                required: true
            tags:
                - players
            responses:
                '201':
                    description: Successful response.
            operationId: createPlayer
            summary: Create a Player
            description: Creates a new instance of a `Player`.
    '/players/{playerId}':
        summary: Path used to manage a single Player.
        description: >-
            The REST endpoint/path used to get, update, and delete single instances of an `Player`.  This path
            contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks,
            respectively.
        get:
            tags:
                - players
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Player'
                    description: Successful response - returns a single `Player`.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Player not found
                    description: Not found
            operationId: getPlayer
            summary: Get a Player
            description: Gets the details of a single instance of a `Player`.
        put:
            requestBody:
                description: Updated `Player` information.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Player'
                required: true
            tags:
                - players
            responses:
                '202':
                    headers:
                        location:
                            schema:
                                type: string
                            examples:
                                Location:
                                    value: 'http://localhost:8080/players/4'
                    description: Successful response.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found:
                                    value:
                                        error: Player not found
                    description: Not found
            operationId: updatePlayer
            summary: Update a Player
            description: Updates an existing `Player`.
        delete:
            tags:
                - players
            responses:
                '204':
                    description: Successful response.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found:
                                    value:
                                        error: Player not found
                    description: Not found
            operationId: deletePlayer
            summary: Delete a Player
            description: Deletes an existing `Player`.
        parameters:
            -
                name: playerId
                description: A unique identifier for a `Player`.
                schema:
                    type: string
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        game:
            title: Root Type for game
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                price:
                    format: double
                    type: number
            example:
                id: 3
                name: Minecraft
                price: 26.99
        Player:
            title: Root Type for Player
            description: Player data
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                playTime:
                    format: double
                    type: number
            example:
                id: 1
                name: Kristjan
                playTime: 5.55
